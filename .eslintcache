[{"/Users/mcjcloud/projects/chess/src/index.js":"1","/Users/mcjcloud/projects/chess/src/App.js":"2","/Users/mcjcloud/projects/chess/src/routes/play/index.jsx":"3","/Users/mcjcloud/projects/chess/src/components/Board.jsx":"4","/Users/mcjcloud/projects/chess/src/components/Square.jsx":"5","/Users/mcjcloud/projects/chess/src/hooks/use-board/index.js":"6","/Users/mcjcloud/projects/chess/src/hooks/use-board/availablePawnMoves.js":"7","/Users/mcjcloud/projects/chess/src/hooks/use-board/availableRookMoves.js":"8","/Users/mcjcloud/projects/chess/src/hooks/use-board/availableKnightMoves.js":"9","/Users/mcjcloud/projects/chess/src/hooks/use-board/availableBishopMoves.js":"10","/Users/mcjcloud/projects/chess/src/hooks/use-board/availableQueenMoves.js":"11","/Users/mcjcloud/projects/chess/src/hooks/use-board/availableKingMoves.js":"12"},{"size":220,"mtime":1607243476568,"results":"13","hashOfConfig":"14"},{"size":279,"mtime":1607243878584,"results":"15","hashOfConfig":"14"},{"size":175,"mtime":1607246755949,"results":"16","hashOfConfig":"14"},{"size":1772,"mtime":1607320111108,"results":"17","hashOfConfig":"14"},{"size":642,"mtime":1607310731146,"results":"18","hashOfConfig":"14"},{"size":2277,"mtime":1607353439189,"results":"19","hashOfConfig":"14"},{"size":1269,"mtime":1607313049770,"results":"20","hashOfConfig":"14"},{"size":2613,"mtime":1607443720734,"results":"21","hashOfConfig":"14"},{"size":812,"mtime":1607317638448,"results":"22","hashOfConfig":"14"},{"size":1257,"mtime":1607443647993,"results":"23","hashOfConfig":"14"},{"size":314,"mtime":1607320481360,"results":"24","hashOfConfig":"14"},{"size":717,"mtime":1607353877160,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"h0g0h",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/mcjcloud/projects/chess/src/index.js",[],["52","53"],"/Users/mcjcloud/projects/chess/src/App.js",[],"/Users/mcjcloud/projects/chess/src/routes/play/index.jsx",[],"/Users/mcjcloud/projects/chess/src/components/Board.jsx",[],"/Users/mcjcloud/projects/chess/src/components/Square.jsx",[],"/Users/mcjcloud/projects/chess/src/hooks/use-board/index.js",["54"],"import { useCallback, useState } from \"react\"\nimport availableBishopMoves from \"./availableBishopMoves\"\nimport availableKingMoves from \"./availableKingMoves\"\nimport availableKnightMoves from \"./availableKnightMoves\"\nimport availablePawnMoves from \"./availablePawnMoves\"\nimport availableQueenMoves from \"./availableQueenMoves\"\nimport availableRookMoves from \"./availableRookMoves\"\n\n// board model\nconst DEFAULT_BOARD = {\n  squares: [\n    // a row\n    [\"br\", \"bn\", \"bb\", \"bq\", \"bk\", \"bb\", \"bn\", \"br\"],\n    [\"bp\", \"bp\", \"bp\", \"bp\", \"bp\", \"bp\", \"bp\", \"bp\"],\n    [\"  \", \"  \", \"  \", \"  \", \"  \", \"  \", \"  \", \"  \"],\n    [\"  \", \"  \", \"  \", \"  \", \"  \", \"  \", \"  \", \"  \"],\n    [\"  \", \"  \", \"  \", \"  \", \"  \", \"  \", \"  \", \"  \"],\n    [\"  \", \"  \", \"  \", \"  \", \"  \", \"  \", \"  \", \"  \"],\n    [\"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\"],\n    [\"wr\", \"wn\", \"wb\", \"wq\", \"wk\", \"wb\", \"wn\", \"wr\"],\n  ]\n}\n\nconst useBoard = () => {\n  const [board, setBoard] = useState(DEFAULT_BOARD.squares)\n  const [lastMove, setLastMove] = useState([])\n  const [lastLastMove, setLastLastMove] = useState([])\n\n  const availableMoves = useCallback((src) => {\n    console.log({ board, src })\n    const srcPiece = board[src.y][src.x]\n    switch (srcPiece.charAt(1)) {\n      case \"p\": return availablePawnMoves(board, src, lastMove)\n      case \"r\": return availableRookMoves(board, src, lastMove)\n      case \"n\": return availableKnightMoves(board, src, lastMove)\n      case \"b\": return availableBishopMoves(board, src, lastMove)\n      case \"q\": return availableQueenMoves(board, src, lastMove)\n      case \"k\": return availableKingMoves(board, src, lastMove)\n      default: return []\n    }\n  }, [board, lastMove])\n\n  const movePiece = useCallback((src, dest) => {\n    const moves = availableMoves(src)\n    console.log({ src, dest, moves })\n    if (moves.some(([, m]) => m.x === dest.x && m.y === dest.y)) {\n      const brd = [...board]\n      brd[dest.y][dest.x] = brd[src.y][src.x]\n      brd[src.y][src.x] = \"  \"\n      setBoard(brd)\n      setLastLastMove(lastMove)\n      setLastMove([src, dest])\n    }\n  }, [board, lastMove, availableMoves])\n\n  return {\n    availableMoves,\n    board,\n    movePiece,\n  }  \n}\nexport default useBoard\n\nexport const inBounds = ({ x, y }) => {\n  return x >= 0 && x < 8 && y >= 0 && y < 8\n}\n","/Users/mcjcloud/projects/chess/src/hooks/use-board/availablePawnMoves.js",[],"/Users/mcjcloud/projects/chess/src/hooks/use-board/availableRookMoves.js",[],"/Users/mcjcloud/projects/chess/src/hooks/use-board/availableKnightMoves.js",[],"/Users/mcjcloud/projects/chess/src/hooks/use-board/availableBishopMoves.js",[],"/Users/mcjcloud/projects/chess/src/hooks/use-board/availableQueenMoves.js",[],"/Users/mcjcloud/projects/chess/src/hooks/use-board/availableKingMoves.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":27,"column":10,"nodeType":"61","messageId":"62","endLine":27,"endColumn":22},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'lastLastMove' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]